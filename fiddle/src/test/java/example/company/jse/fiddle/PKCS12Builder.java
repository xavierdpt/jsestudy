package example.company.jse.fiddle;

import example.company.asn.AsnEncoding;
import example.company.asn.elements.Asn;
import example.company.asn.elements.AsnElement;
import example.company.asn.elements.AsnOctetString;
import example.company.asn.elements.AsnSequence;
import example.company.asn.utils.OIDS;
import example.company.tox.common.Common;

public class PKCS12Builder {

	public byte[] hash = Common.bytes("B72974C662F5B884D336678666D7D9F7D5877464");

	public byte[] macSalt = Common.bytes("6CB867698D2BF58AC0ECA315C192DEC3C76AF213");
	public byte[] localKeyId = Common.bytes("54696D652031353237323430363739303233");
	public byte[] friendlyName = Common.bytes("0063006C00690065006E007400630061");
	public byte[] pbeSha3DESCBCs = Common.bytes("8FD2439C4F78EB6612D94F642C7B75FBBF5FF371");
	public byte[] something2 = Common.bytes(
			
	public byte[] something3s = Common.bytes("1B9DCA53442A0222F5DA254DBBC62C7C6FD2E60E");
	public byte[] something4s = Common.bytes(
			

	private int macIterationCount = 100000;

	public byte[] encode() {
		return getAsn().encode();
	}

	public AsnElement getMacAsn() {
		return Asn.seq(

				Asn.seq(

						Asn.seq(Asn.oid(OIDS.HASH_ALGORITHM_IDENTIFIER), Asn.n()),

						Asn.os(hash)

				),

				Asn.os(macSalt),

				Asn.integer(macIterationCount)

		);
	}

	public AsnElement getContent() {

		return Asn.seq(

				Asn.oid(OIDS.DATA),

				Asn.cs(0, getDataContent())

		);
	}

	public AsnOctetString getDataContent() {

		return Asn.os(Asn.seq(

				Asn.seq(Asn.oid(OIDS.DATA), Asn.cs(0, Asn.os(getSubDataContent()))),

				Asn.seq(Asn.oid(OIDS.ENCRYPTED_DATA), Asn.cs(0, getEncryptedDataContent()))

		));
	}

	private AsnSequence getSubDataContent() {
		return Asn.seq(

				Asn.seq(

						Asn.oid(OIDS.PKCS_8_SHROUDED_KEY_BAG),

						Asn.cs(0, getShroudedContentAsn()),

						Asn.set(getFriendlyNameAsn(), getLocalKeyIdAsn())

				));
	}

	private AsnElement getLocalKeyIdAsn() {
		return Asn.seq(Asn.oid(OIDS.LOCAL_KEY_ID), Asn.set(Asn.os(localKeyId)));
	}

	private AsnElement getFriendlyNameAsn() {
		return Asn.seq(Asn.oid(OIDS.FRIENDLY_NAME), Asn.set(Asn.bmpstring(friendlyName)));
	}

	private AsnSequence getShroudedContentAsn() {

		return Asn.seq(

				Asn.seq(

						Asn.oid(OIDS.PBE_WITH_SHA_AND_3_KEY_TRIPLE_DES_CBC),
						Asn.seq(Asn.os(pbeSha3DESCBCs), Asn.integer(50000))

				),

				Asn.os(something2)

		);
	}

	private AsnSequence getEncryptedDataContent() {
		return Asn.seq(

				Asn.integer(0),

				Asn.seq(

						Asn.oid(OIDS.DATA),

						Asn.seq(Asn.oid(OIDS.PBE_WITH_SHA_AND_40_BIT_RC2_CBC),
								Asn.seq(Asn.os(something3s), Asn.integer(50000))),

						Asn.cs(0, something4s, AsnEncoding.PRIMITIVE)

				)

		);
	}

	public AsnElement getAsn() {

		return Asn.seq(

				Asn.integer(3),

				getContent(),

				getMacAsn()

		);
	}
}
